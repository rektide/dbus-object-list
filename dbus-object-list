"use strict"
function DbusObjectList( baseName, target, emit, bus){
	let
	  first= baseName.slice( 0, 1),
	  cap= first.toUpperCase(),
	  rest= baseName.slice( 1),
	  plural= rest+ (baseName.plural? baseName.plural: "s"),
	  capPlural= cap+ plural,
	  newObj= "New"+ capPlural,
	  removedObj= "Removed"+ capPlural,
	  map= {},
	  value= [],
	  done= Promise.resolve( target).then( target=>{
		return new Promise(( resolve, reject)=> {
			console.log("target", capPlural)
			// retrieve initial value as property
			target[ capPlural](( err, initial)=>{
				value.push.apply( value, initial)
				resolve( value)
			})
			// subscribe to new
			target.on( newObj, newObj=>{
				value.push( newObj)
				if(emit){
					emit( baseName, newObj, newObj)
				}
			})
			// subscribe to remove
			target.on( removedObj, removeObj=>{
				let i= value.indexOf( removeObj)
				if( i === -1){
					return
				}
				value.splice( i, 1)
				if(emit){
					emit( baseName, null, removeObj)
				}
			})
		})
	  })
	return {value, done}
}

module.exports= DbusObjectList
